name: Compile, Build, Package, and Release Java GUIs

on:
  push:
    branches:
      - main

  workflow_dispatch:
    inputs:
      release_type:
        description: "Set to 'main' for main release, leave empty for pre-release"
        required: false
        default: ""

permissions:
  contents: write   # needed to create releases

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '24'
          distribution: 'temurin'

      - name: Compile JARs for Linux
        run: |
          mkdir -p target/CRencodingGUI target/CRhashingGUI
          javac -d target/CRencodingGUI $(find . -name "*.java" ! -name "CRhashingGUI.java")
          jar cfe target/CRencodingGUI.jar CRencodingGUI -C target/CRencodingGUI .
          javac -d target/CRhashingGUI $(find . -name "*.java" ! -name "CRencodingGUI.java")
          jar cfe target/CRhashingGUI.jar CRhashingGUI -C target/CRhashingGUI .

      - name: Package Linux installers
        run: |
          mkdir -p target/installer/linux
          jpackage --name CRencodingGUI --input target --main-jar CRencodingGUI.jar --main-class CRencodingGUI --type app-image --dest target/installer/linux
          jpackage --name CRhashingGUI --input target --main-jar CRhashingGUI.jar --main-class CRhashingGUI --type app-image --dest target/installer/linux
          mv target/installer/linux/CRencodingGUI target/installer/linux/CRencodingGUI-linux
          mv target/installer/linux/CRhashingGUI target/installer/linux/CRhashingGUI-linux
          zip -r target/installer/linux/CRencodingGUI-linux.zip target/installer/linux/CRencodingGUI-linux
          zip -r target/installer/linux/CRhashingGUI-linux.zip target/installer/linux/CRhashingGUI-linux

      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v4
        with:
          name: crencodinggui-linux
          path: target/installer/linux/CRencodingGUI-linux.zip

      - uses: actions/upload-artifact@v4
        with:
          name: crhashinggui-linux
          path: target/installer/linux/CRhashingGUI-linux.zip

      - name: Upload JARs
        uses: actions/upload-artifact@v4
        with:
          name: crencodinggui-linux-jar
          path: target/CRencodingGUI.jar

      - uses: actions/upload-artifact@v4
        with:
          name: crhashinggui-linux-jar
          path: target/CRhashingGUI.jar

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '24'
          distribution: 'temurin'

      - name: Compile JARs for Windows
        shell: pwsh
        run: |
          mkdir target\CRencodingGUI
          mkdir target\CRhashingGUI

          $filesEnc = Get-ChildItem -Path . -Recurse -Filter *.java | Where-Object { $_.Name -ne 'CRhashingGUI.java' } | ForEach-Object { $_.FullName }
          javac -d target\CRencodingGUI @filesEnc

          jar cfe target\CRencodingGUI.jar CRencodingGUI -C target\CRencodingGUI .

          $filesHash = Get-ChildItem -Path . -Recurse -Filter *.java | Where-Object { $_.Name -ne 'CRencodingGUI.java' } | ForEach-Object { $_.FullName }
          javac -d target\CRhashingGUI @filesHash

          jar cfe target\CRhashingGUI.jar CRhashingGUI -C target\CRhashingGUI .

      - name: Package Windows installers
        shell: pwsh
        run: |
          mkdir target\installer\windows
          jpackage --name CRencodingGUI --input target --main-jar CRencodingGUI.jar --main-class CRencodingGUI --type msi --dest target\installer\windows
          jpackage --name CRhashingGUI --input target --main-jar CRhashingGUI.jar --main-class CRhashingGUI --type msi --dest target\installer\windows
          Get-ChildItem target\installer\windows\*.msi | ForEach-Object {
            $newName = "$($_.BaseName -replace '-1\.0$', '-windows')$($_.Extension)"
            Rename-Item $_.FullName $newName
          }

      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: crencodinggui-windows
          path: target\installer\windows\CRencodingGUI-windows.msi

      - uses: actions/upload-artifact@v4
        with:
          name: crhashinggui-windows
          path: target\installer\windows\CRhashingGUI-windows.msi

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '24'
          distribution: 'temurin'

      - name: Compile JARs for macOS
        run: |
          mkdir -p target/CRencodingGUI target/CRhashingGUI
          javac -d target/CRencodingGUI $(find . -name "*.java" ! -name "CRhashingGUI.java")
          jar cfe target/CRencodingGUI.jar CRencodingGUI -C target/CRencodingGUI .
          javac -d target/CRhashingGUI $(find . -name "*.java" ! -name "CRencodingGUI.java")
          jar cfe target/CRhashingGUI.jar CRhashingGUI -C target/CRhashingGUI .

      - name: Package macOS installers
        run: |
          mkdir -p target/installer/macos
          jpackage --name CRencodingGUI --input target --main-jar CRencodingGUI.jar --main-class CRencodingGUI --type dmg --dest target/installer/macos
          jpackage --name CRhashingGUI --input target --main-jar CRhashingGUI.jar --main-class CRhashingGUI --type dmg --dest target/installer/macos
          for dmg in target/installer/macos/*.dmg; do
            newname=$(echo "$dmg" | sed 's/-1\.0\.dmg$/-macos.dmg/')
            mv "$dmg" "$newname"
          done

      - name: Upload macOS artifacts
        uses: actions/upload-artifact@v4
        with:
          name: crencodinggui-macos
          path: target/installer/macos/CRencodingGUI-macos.dmg

      - uses: actions/upload-artifact@v4
        with:
          name: crhashinggui-macos
          path: target/installer/macos/CRhashingGUI-macos.dmg

  release:
    needs: [build-linux, build-windows, build-macos]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Download Linux artifacts
        uses: actions/download-artifact@v4
        with:
          name: crencodinggui-linux

      - uses: actions/download-artifact@v4
        with:
          name: crhashinggui-linux

      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: crencodinggui-windows

      - uses: actions/download-artifact@v4
        with:
          name: crhashinggui-windows

      - name: Download macOS artifacts
        uses: actions/download-artifact@v4
        with:
          name: crencodinggui-macos

      - uses: actions/download-artifact@v4
        with:
          name: crhashinggui-macos

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: build-${{ github.run_number }}
          prerelease: ${{ github.event.inputs.release_type != 'main' }}
          files: |
            CRencodingGUI-linux.zip
            CRhashingGUI-linux.zip
            CRencodingGUI-windows.msi
            CRhashingGUI-windows.msi
            CRencodingGUI-macos.dmg
            CRhashingGUI-macos.dmg
            CRencodingGUI.jar
            CRhashingGUI.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
